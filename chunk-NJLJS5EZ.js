import{c as K}from"./chunk-KHEEIZ2W.js";import"./chunk-VEXMTMPT.js";import"./chunk-Z4ZFXNJ7.js";import"./chunk-5IRIGFBY.js";import{C as V}from"./chunk-7IEGBUCH.js";import{Ac as U,Ca as L,Ea as M,Kc as _,Ma as D,Q as b,Sc as O,Ub as c,Wa as u,Xa as h,_a as T,c as A,db as j,ec as B,f as w,fc as G,g as p,ga as R,gc as N,hc as a,ia as m,ic as g,jc as l,u as E,v as F,wc as S,xa as I,yb as d,yc as W,zb as o,zc as H}from"./chunk-7QP7SMW2.js";import"./chunk-2EBTC7QX.js";import{a as f,b as z}from"./chunk-66YHNWRR.js";var ae=["*"],v=class{_clearListeners(){for(let s of this._listeners)s.remove();this._listeners=[]}constructor(s){this._ngZone=s,this._pending=[],this._listeners=[],this._targetStream=new p(void 0)}getLazyEmitter(s){return this._targetStream.pipe(R(e=>{let t=new A(n=>{if(!e){this._pending.push({observable:t,observer:n});return}let r=e.addListener(s,k=>{this._ngZone.run(()=>n.next(k))});if(!r){n.complete();return}return this._listeners.push(r),()=>r.remove()});return t}))}setTarget(s){let e=this._targetStream.value;s!==e&&(e&&(this._clearListeners(),this._pending=[]),this._targetStream.next(s),this._pending.forEach(t=>t.observable.subscribe(t.observer)),this._pending=[])}destroy(){this._clearListeners(),this._pending=[],this._targetStream.complete()}},C={center:{lat:37.421995,lng:-122.084092},zoom:17,mapTypeId:"roadmap"},J="500px",Q="500px",y=(()=>{class i{set center(e){this._center=e}set zoom(e){this._zoom=e}set options(e){this._options=e||C}constructor(e,t,n){if(this._elementRef=e,this._ngZone=t,this._eventManager=new v(I(h)),this.height=J,this.width=Q,this._options=C,this.mapInitialized=new u,this.authFailure=new u,this.boundsChanged=this._eventManager.getLazyEmitter("bounds_changed"),this.centerChanged=this._eventManager.getLazyEmitter("center_changed"),this.mapClick=this._eventManager.getLazyEmitter("click"),this.mapDblclick=this._eventManager.getLazyEmitter("dblclick"),this.mapDrag=this._eventManager.getLazyEmitter("drag"),this.mapDragend=this._eventManager.getLazyEmitter("dragend"),this.mapDragstart=this._eventManager.getLazyEmitter("dragstart"),this.headingChanged=this._eventManager.getLazyEmitter("heading_changed"),this.idle=this._eventManager.getLazyEmitter("idle"),this.maptypeidChanged=this._eventManager.getLazyEmitter("maptypeid_changed"),this.mapMousemove=this._eventManager.getLazyEmitter("mousemove"),this.mapMouseout=this._eventManager.getLazyEmitter("mouseout"),this.mapMouseover=this._eventManager.getLazyEmitter("mouseover"),this.projectionChanged=this._eventManager.getLazyEmitter("projection_changed"),this.mapRightclick=this._eventManager.getLazyEmitter("rightclick"),this.tilesloaded=this._eventManager.getLazyEmitter("tilesloaded"),this.tiltChanged=this._eventManager.getLazyEmitter("tilt_changed"),this.zoomChanged=this._eventManager.getLazyEmitter("zoom_changed"),this._isBrowser=V(n),this._isBrowser){let r=window;r.google,this._existingAuthFailureCallback=r.gm_authFailure,r.gm_authFailure=()=>{this._existingAuthFailureCallback&&this._existingAuthFailureCallback(),this.authFailure.emit()}}}ngOnChanges(e){(e.height||e.width)&&this._setSize();let t=this.googleMap;t&&(e.options&&t.setOptions(this._combineOptions()),e.center&&this._center&&t.setCenter(this._center),e.zoom&&this._zoom!=null&&t.setZoom(this._zoom),e.mapTypeId&&this.mapTypeId&&t.setMapTypeId(this.mapTypeId))}ngOnInit(){this._isBrowser&&(this._mapEl=this._elementRef.nativeElement.querySelector(".map-container"),this._setSize(),google.maps.Map?this._initialize(google.maps.Map):this._ngZone.runOutsideAngular(()=>{google.maps.importLibrary("maps").then(e=>this._initialize(e.Map))}))}_initialize(e){this._ngZone.runOutsideAngular(()=>{this.googleMap=new e(this._mapEl,this._combineOptions()),this._eventManager.setTarget(this.googleMap),this.mapInitialized.emit(this.googleMap)})}ngOnDestroy(){if(this.mapInitialized.complete(),this._eventManager.destroy(),this._isBrowser){let e=window;e.gm_authFailure=this._existingAuthFailureCallback}}fitBounds(e,t){this._assertInitialized(),this.googleMap.fitBounds(e,t)}panBy(e,t){this._assertInitialized(),this.googleMap.panBy(e,t)}panTo(e){this._assertInitialized(),this.googleMap.panTo(e)}panToBounds(e,t){this._assertInitialized(),this.googleMap.panToBounds(e,t)}getBounds(){return this._assertInitialized(),this.googleMap.getBounds()||null}getCenter(){return this._assertInitialized(),this.googleMap.getCenter()}getClickableIcons(){return this._assertInitialized(),this.googleMap.getClickableIcons()}getHeading(){return this._assertInitialized(),this.googleMap.getHeading()}getMapTypeId(){return this._assertInitialized(),this.googleMap.getMapTypeId()}getProjection(){return this._assertInitialized(),this.googleMap.getProjection()||null}getStreetView(){return this._assertInitialized(),this.googleMap.getStreetView()}getTilt(){return this._assertInitialized(),this.googleMap.getTilt()}getZoom(){return this._assertInitialized(),this.googleMap.getZoom()}get controls(){return this._assertInitialized(),this.googleMap.controls}get data(){return this._assertInitialized(),this.googleMap.data}get mapTypes(){return this._assertInitialized(),this.googleMap.mapTypes}get overlayMapTypes(){return this._assertInitialized(),this.googleMap.overlayMapTypes}_resolveMap(){return this.googleMap?Promise.resolve(this.googleMap):this.mapInitialized.pipe(b(1)).toPromise()}_setSize(){if(this._mapEl){let e=this._mapEl.style;e.height=this.height===null?"":$(this.height)||J,e.width=this.width===null?"":$(this.width)||Q}}_combineOptions(){let e=this._options||{};return z(f({},e),{center:this._center||e.center||C.center,zoom:this._zoom??e.zoom??C.zoom,mapTypeId:this.mapTypeId||e.mapTypeId||C.mapTypeId,mapId:this.mapId||e.mapId})}_assertInitialized(){this.googleMap}static{this.\u0275fac=function(t){return new(t||i)(o(T),o(h),o(j))}}static{this.\u0275cmp=L({type:i,selectors:[["google-map"]],inputs:{height:"height",width:"width",mapId:"mapId",mapTypeId:"mapTypeId",center:"center",zoom:"zoom",options:"options"},outputs:{mapInitialized:"mapInitialized",authFailure:"authFailure",boundsChanged:"boundsChanged",centerChanged:"centerChanged",mapClick:"mapClick",mapDblclick:"mapDblclick",mapDrag:"mapDrag",mapDragend:"mapDragend",mapDragstart:"mapDragstart",headingChanged:"headingChanged",idle:"idle",maptypeidChanged:"maptypeidChanged",mapMousemove:"mapMousemove",mapMouseout:"mapMouseout",mapMouseover:"mapMouseover",projectionChanged:"projectionChanged",mapRightclick:"mapRightclick",tilesloaded:"tilesloaded",tiltChanged:"tiltChanged",zoomChanged:"zoomChanged"},exportAs:["googleMap"],standalone:!0,features:[D,O],ngContentSelectors:ae,decls:2,vars:0,consts:[[1,"map-container"]],template:function(t,n){t&1&&(H(),l(0,"div",0),U(1))},encapsulation:2,changeDetection:0})}}return i})(),se=/([A-Za-z%]+)$/;function $(i){return i==null?"":se.test(i)?i:`${i}px`}var q=(()=>{class i{set url(e){this._url.next(e)}get bounds(){return this._bounds.value}set bounds(e){this._bounds.next(e)}set opacity(e){this._opacity.next(e)}constructor(e,t){this._map=e,this._ngZone=t,this._eventManager=new v(I(h)),this._opacity=new p(1),this._url=new p(""),this._bounds=new p(void 0),this._destroyed=new w,this.clickable=!1,this.mapClick=this._eventManager.getLazyEmitter("click"),this.mapDblclick=this._eventManager.getLazyEmitter("dblclick"),this.groundOverlayInitialized=new u}ngOnInit(){this._map._isBrowser&&this._bounds.pipe(m(this._destroyed)).subscribe(e=>{this.groundOverlay&&(this.groundOverlay.setMap(null),this.groundOverlay=void 0),e&&(google.maps.GroundOverlay&&this._map.googleMap?this._initialize(this._map.googleMap,google.maps.GroundOverlay,e):this._ngZone.runOutsideAngular(()=>{Promise.all([this._map._resolveMap(),google.maps.importLibrary("maps")]).then(([t,n])=>{this._initialize(t,n.GroundOverlay,e)})}))})}_initialize(e,t,n){this._ngZone.runOutsideAngular(()=>{this.groundOverlay=new t(this._url.getValue(),n,{clickable:this.clickable,opacity:this._opacity.value}),this._assertInitialized(),this.groundOverlay.setMap(e),this._eventManager.setTarget(this.groundOverlay),this.groundOverlayInitialized.emit(this.groundOverlay),this._hasWatchers||(this._hasWatchers=!0,this._watchForOpacityChanges(),this._watchForUrlChanges())})}ngOnDestroy(){this._eventManager.destroy(),this._destroyed.next(),this._destroyed.complete(),this.groundOverlay?.setMap(null)}getBounds(){return this._assertInitialized(),this.groundOverlay.getBounds()}getOpacity(){return this._assertInitialized(),this.groundOverlay.getOpacity()}getUrl(){return this._assertInitialized(),this.groundOverlay.getUrl()}_watchForOpacityChanges(){this._opacity.pipe(m(this._destroyed)).subscribe(e=>{e!=null&&this.groundOverlay?.setOpacity(e)})}_watchForUrlChanges(){this._url.pipe(m(this._destroyed)).subscribe(e=>{let t=this.groundOverlay;t&&(t.set("url",e),t.setMap(null),t.setMap(this._map.googleMap))})}_assertInitialized(){}static{this.\u0275fac=function(t){return new(t||i)(o(y),o(h))}}static{this.\u0275dir=M({type:i,selectors:[["map-ground-overlay"]],inputs:{url:"url",bounds:"bounds",clickable:"clickable",opacity:"opacity"},outputs:{mapClick:"mapClick",mapDblclick:"mapDblclick",groundOverlayInitialized:"groundOverlayInitialized"},exportAs:["mapGroundOverlay"],standalone:!0})}}return i})();var X=(()=>{class i{set options(e){this._options.next(e||{})}set url(e){this._url.next(e)}constructor(e,t){this._map=e,this._ngZone=t,this._eventManager=new v(I(h)),this._options=new p({}),this._url=new p(""),this._destroyed=new w,this.kmlClick=this._eventManager.getLazyEmitter("click"),this.defaultviewportChanged=this._eventManager.getLazyEmitter("defaultviewport_changed"),this.statusChanged=this._eventManager.getLazyEmitter("status_changed"),this.kmlLayerInitialized=new u}ngOnInit(){this._map._isBrowser&&this._combineOptions().pipe(b(1)).subscribe(e=>{google.maps.KmlLayer&&this._map.googleMap?this._initialize(this._map.googleMap,google.maps.KmlLayer,e):this._ngZone.runOutsideAngular(()=>{Promise.all([this._map._resolveMap(),google.maps.importLibrary("maps")]).then(([t,n])=>{this._initialize(t,n.KmlLayer,e)})})})}_initialize(e,t,n){this._ngZone.runOutsideAngular(()=>{this.kmlLayer=new t(n),this._assertInitialized(),this.kmlLayer.setMap(e),this._eventManager.setTarget(this.kmlLayer),this.kmlLayerInitialized.emit(this.kmlLayer),this._watchForOptionsChanges(),this._watchForUrlChanges()})}ngOnDestroy(){this._eventManager.destroy(),this._destroyed.next(),this._destroyed.complete(),this.kmlLayer?.setMap(null)}getDefaultViewport(){return this._assertInitialized(),this.kmlLayer.getDefaultViewport()}getMetadata(){return this._assertInitialized(),this.kmlLayer.getMetadata()}getStatus(){return this._assertInitialized(),this.kmlLayer.getStatus()}getUrl(){return this._assertInitialized(),this.kmlLayer.getUrl()}getZIndex(){return this._assertInitialized(),this.kmlLayer.getZIndex()}_combineOptions(){return F([this._options,this._url]).pipe(E(([e,t])=>z(f({},e),{url:t||e.url})))}_watchForOptionsChanges(){this._options.pipe(m(this._destroyed)).subscribe(e=>{this.kmlLayer&&(this._assertInitialized(),this.kmlLayer.setOptions(e))})}_watchForUrlChanges(){this._url.pipe(m(this._destroyed)).subscribe(e=>{e&&this.kmlLayer&&(this._assertInitialized(),this.kmlLayer.setUrl(e))})}_assertInitialized(){}static{this.\u0275fac=function(t){return new(t||i)(o(y),o(h))}}static{this.\u0275dir=M({type:i,selectors:[["map-kml-layer"]],inputs:{options:"options",url:"url"},outputs:{kmlClick:"kmlClick",defaultviewportChanged:"defaultviewportChanged",statusChanged:"statusChanged",kmlLayerInitialized:"kmlLayerInitialized"},exportAs:["mapKmlLayer"],standalone:!0})}}return i})(),re={position:{lat:37.421995,lng:-122.084092}},Y=(()=>{class i{set title(e){this._title=e}set position(e){this._position=e}set label(e){this._label=e}set clickable(e){this._clickable=e}set options(e){this._options=e}set icon(e){this._icon=e}set visible(e){this._visible=e}constructor(e,t){this._googleMap=e,this._ngZone=t,this._eventManager=new v(I(h)),this.animationChanged=this._eventManager.getLazyEmitter("animation_changed"),this.mapClick=this._eventManager.getLazyEmitter("click"),this.clickableChanged=this._eventManager.getLazyEmitter("clickable_changed"),this.cursorChanged=this._eventManager.getLazyEmitter("cursor_changed"),this.mapDblclick=this._eventManager.getLazyEmitter("dblclick"),this.mapDrag=this._eventManager.getLazyEmitter("drag"),this.mapDragend=this._eventManager.getLazyEmitter("dragend"),this.draggableChanged=this._eventManager.getLazyEmitter("draggable_changed"),this.mapDragstart=this._eventManager.getLazyEmitter("dragstart"),this.flatChanged=this._eventManager.getLazyEmitter("flat_changed"),this.iconChanged=this._eventManager.getLazyEmitter("icon_changed"),this.mapMousedown=this._eventManager.getLazyEmitter("mousedown"),this.mapMouseout=this._eventManager.getLazyEmitter("mouseout"),this.mapMouseover=this._eventManager.getLazyEmitter("mouseover"),this.mapMouseup=this._eventManager.getLazyEmitter("mouseup"),this.positionChanged=this._eventManager.getLazyEmitter("position_changed"),this.mapRightclick=this._eventManager.getLazyEmitter("rightclick"),this.shapeChanged=this._eventManager.getLazyEmitter("shape_changed"),this.titleChanged=this._eventManager.getLazyEmitter("title_changed"),this.visibleChanged=this._eventManager.getLazyEmitter("visible_changed"),this.zindexChanged=this._eventManager.getLazyEmitter("zindex_changed"),this.markerInitialized=new u}ngOnInit(){this._googleMap._isBrowser&&(google.maps.Marker&&this._googleMap.googleMap?this._initialize(this._googleMap.googleMap,google.maps.Marker):this._ngZone.runOutsideAngular(()=>{Promise.all([this._googleMap._resolveMap(),google.maps.importLibrary("marker")]).then(([e,t])=>{this._initialize(e,t.Marker)})}))}_initialize(e,t){this._ngZone.runOutsideAngular(()=>{this.marker=new t(this._combineOptions()),this._assertInitialized(),this.marker.setMap(e),this._eventManager.setTarget(this.marker),this.markerInitialized.next(this.marker)})}ngOnChanges(e){let{marker:t,_title:n,_position:r,_label:k,_clickable:x,_icon:P,_visible:Z}=this;t&&(e.options&&t.setOptions(this._combineOptions()),e.title&&n!==void 0&&t.setTitle(n),e.position&&r&&t.setPosition(r),e.label&&k!==void 0&&t.setLabel(k),e.clickable&&x!==void 0&&t.setClickable(x),e.icon&&P&&t.setIcon(P),e.visible&&Z!==void 0&&t.setVisible(Z))}ngOnDestroy(){this.markerInitialized.complete(),this._eventManager.destroy(),this.marker?.setMap(null)}getAnimation(){return this._assertInitialized(),this.marker.getAnimation()||null}getClickable(){return this._assertInitialized(),this.marker.getClickable()}getCursor(){return this._assertInitialized(),this.marker.getCursor()||null}getDraggable(){return this._assertInitialized(),!!this.marker.getDraggable()}getIcon(){return this._assertInitialized(),this.marker.getIcon()||null}getLabel(){return this._assertInitialized(),this.marker.getLabel()||null}getOpacity(){return this._assertInitialized(),this.marker.getOpacity()||null}getPosition(){return this._assertInitialized(),this.marker.getPosition()||null}getShape(){return this._assertInitialized(),this.marker.getShape()||null}getTitle(){return this._assertInitialized(),this.marker.getTitle()||null}getVisible(){return this._assertInitialized(),this.marker.getVisible()}getZIndex(){return this._assertInitialized(),this.marker.getZIndex()||null}getAnchor(){return this._assertInitialized(),this.marker}_resolveMarker(){return this.marker?Promise.resolve(this.marker):this.markerInitialized.pipe(b(1)).toPromise()}_combineOptions(){let e=this._options||re;return z(f({},e),{title:this._title||e.title,position:this._position||e.position,label:this._label||e.label,clickable:this._clickable??e.clickable,map:this._googleMap.googleMap,icon:this._icon||e.icon,visible:this._visible??e.visible})}_assertInitialized(){}static{this.\u0275fac=function(t){return new(t||i)(o(y),o(h))}}static{this.\u0275dir=M({type:i,selectors:[["map-marker"]],inputs:{title:"title",position:"position",label:"label",clickable:"clickable",options:"options",icon:"icon",visible:"visible"},outputs:{animationChanged:"animationChanged",mapClick:"mapClick",clickableChanged:"clickableChanged",cursorChanged:"cursorChanged",mapDblclick:"mapDblclick",mapDrag:"mapDrag",mapDragend:"mapDragend",draggableChanged:"draggableChanged",mapDragstart:"mapDragstart",flatChanged:"flatChanged",iconChanged:"iconChanged",mapMousedown:"mapMousedown",mapMouseout:"mapMouseout",mapMouseover:"mapMouseover",mapMouseup:"mapMouseup",positionChanged:"positionChanged",mapRightclick:"mapRightclick",shapeChanged:"shapeChanged",titleChanged:"titleChanged",visibleChanged:"visibleChanged",zindexChanged:"zindexChanged",markerInitialized:"markerInitialized"},exportAs:["mapMarker"],standalone:!0,features:[D]})}}return i})();var ee=(()=>{class i{set autoRefresh(e){this._autoRefresh.next(e)}constructor(e,t){this._map=e,this._ngZone=t,this._autoRefresh=new p(!0),this._destroyed=new w,this.trafficLayerInitialized=new u}ngOnInit(){this._map._isBrowser&&this._combineOptions().pipe(b(1)).subscribe(e=>{google.maps.TrafficLayer&&this._map.googleMap?this._initialize(this._map.googleMap,google.maps.TrafficLayer,e):this._ngZone.runOutsideAngular(()=>{Promise.all([this._map._resolveMap(),google.maps.importLibrary("maps")]).then(([t,n])=>{this._initialize(t,n.TrafficLayer,e)})})})}_initialize(e,t,n){this._ngZone.runOutsideAngular(()=>{this.trafficLayer=new t(n),this._assertInitialized(),this.trafficLayer.setMap(e),this.trafficLayerInitialized.emit(this.trafficLayer),this._watchForAutoRefreshChanges()})}ngOnDestroy(){this._destroyed.next(),this._destroyed.complete(),this.trafficLayer?.setMap(null)}_combineOptions(){return this._autoRefresh.pipe(E(e=>({autoRefresh:e})))}_watchForAutoRefreshChanges(){this._combineOptions().pipe(m(this._destroyed)).subscribe(e=>{this._assertInitialized(),this.trafficLayer.setOptions(e)})}_assertInitialized(){if(!this.trafficLayer)throw Error("Cannot interact with a Google Map Traffic Layer before it has been initialized. Please wait for the Traffic Layer to load before trying to interact with it.")}static{this.\u0275fac=function(t){return new(t||i)(o(y),o(h))}}static{this.\u0275dir=M({type:i,selectors:[["map-traffic-layer"]],inputs:{autoRefresh:"autoRefresh"},outputs:{trafficLayerInitialized:"trafficLayerInitialized"},exportAs:["mapTrafficLayer"],standalone:!0})}}return i})();var te=(()=>{class i{set data(e){this._data=e}set options(e){this._options=e}constructor(e,t){this._googleMap=e,this._ngZone=t,this.heatmapInitialized=new u}ngOnInit(){this._googleMap._isBrowser&&(!window.google?.maps?.visualization&&window.google?.maps.importLibrary,google.maps.visualization?.HeatmapLayer&&this._googleMap.googleMap?this._initialize(this._googleMap.googleMap,google.maps.visualization.HeatmapLayer):this._ngZone.runOutsideAngular(()=>{Promise.all([this._googleMap._resolveMap(),google.maps.importLibrary("visualization")]).then(([e,t])=>{this._initialize(e,t.HeatmapLayer)})}))}_initialize(e,t){this._ngZone.runOutsideAngular(()=>{this.heatmap=new t(this._combineOptions()),this._assertInitialized(),this.heatmap.setMap(e),this.heatmapInitialized.emit(this.heatmap)})}ngOnChanges(e){let{_data:t,heatmap:n}=this;n&&(e.options&&n.setOptions(this._combineOptions()),e.data&&t!==void 0&&n.setData(this._normalizeData(t)))}ngOnDestroy(){this.heatmap?.setMap(null)}getData(){return this._assertInitialized(),this.heatmap.getData()}_combineOptions(){let e=this._options||{};return z(f({},e),{data:this._normalizeData(this._data||e.data||[]),map:this._googleMap.googleMap})}_normalizeData(e){let t=[];return e.forEach(n=>{t.push(oe(n)?new google.maps.LatLng(n.lat,n.lng):n)}),t}_assertInitialized(){}static{this.\u0275fac=function(t){return new(t||i)(o(y),o(h))}}static{this.\u0275dir=M({type:i,selectors:[["map-heatmap-layer"]],inputs:{data:"data",options:"options"},outputs:{heatmapInitialized:"heatmapInitialized"},exportAs:["mapHeatmapLayer"],standalone:!0,features:[D]})}}return i})();function oe(i){return i&&typeof i.lat=="number"&&typeof i.lng=="number"}function le(i,s){if(i&1&&l(0,"map-marker",18),i&2){let e=s.$implicit,t=W();c("position",e)("options",t.markerOptions)}}var ie=class i{google;googleMap;center={lat:24,lng:12};zoom=4;display;kmlUrl="https://developers.google.com/maps/documentation/javascript/examples/kml/westcampus.kml";center1={lat:37.774546,lng:-122.433523};zoom1=12;heatmapOptions={radius:5};heatmapData=[{lat:37.782,lng:-122.447},{lat:37.782,lng:-122.445},{lat:37.782,lng:-122.443},{lat:37.782,lng:-122.441},{lat:37.782,lng:-122.439},{lat:37.782,lng:-122.437},{lat:37.782,lng:-122.435},{lat:37.785,lng:-122.447},{lat:37.785,lng:-122.445},{lat:37.785,lng:-122.443},{lat:37.785,lng:-122.441},{lat:37.785,lng:-122.439},{lat:37.785,lng:-122.437},{lat:37.785,lng:-122.435}];moveMap(s){this.center=s.latLng.toJSON()}move(s){this.display=s.latLng.toJSON()}imageUrl="https://angular.io/assets/images/logos/angular/angular.svg";imageBounds={east:10,north:10,south:-10,west:-10};markerOptions={draggable:!1};markerPositions=[];addMarker(s){this.markerPositions.push(s.latLng.toJSON())}static \u0275fac=function(e){return new(e||i)};static \u0275cmp=L({type:i,selectors:[["app-google-map"]],standalone:!0,features:[O],decls:78,vars:18,consts:[[1,"row"],[1,"col-xl-6"],[1,"card","custom-card"],[1,"top-left"],[1,"top-right"],[1,"bottom-left"],[1,"bottom-right"],[1,"card-header"],[1,"card-title"],[1,"card-body"],["id","google-map","height","300px","width","100%",3,"mapClick","mapMousemove","center","zoom"],["id","google-map-overlay"],["height","100%","width","100%",3,"center","zoom"],[3,"url","bounds"],["id","map-layers"],[3,"url"],["id","map-markers"],["height","100%","width","100%",3,"mapClick","center","zoom"],[3,"position","options"],["id","streetview-map"],[3,"data","options"],["id","map-geofencing"],[3,"autoRefresh"]],template:function(e,t){e&1&&(a(0,"div",0)(1,"div",1)(2,"div",2),l(3,"div",3)(4,"div",4)(5,"div",5)(6,"div",6),a(7,"div",7)(8,"div",8),_(9,"Basic Map"),g()(),a(10,"div",9)(11,"google-map",10),S("mapClick",function(r){return t.moveMap(r)})("mapMousemove",function(r){return t.move(r)}),g()()()(),a(12,"div",1)(13,"div",2),l(14,"div",3)(15,"div",4)(16,"div",5)(17,"div",6),a(18,"div",7)(19,"div",8),_(20,"Overlay Map"),g()(),a(21,"div",9)(22,"div",11)(23,"google-map",12),l(24,"map-ground-overlay",13),g()()()()(),a(25,"div",1)(26,"div",2),l(27,"div",3)(28,"div",4)(29,"div",5)(30,"div",6),a(31,"div",7)(32,"div",8),_(33,"Layers Map"),g()(),a(34,"div",9)(35,"div",14)(36,"google-map",12),l(37,"map-kml-layer",15),g()()()()(),a(38,"div",1)(39,"div",2),l(40,"div",3)(41,"div",4)(42,"div",5)(43,"div",6),a(44,"div",7)(45,"div",8),_(46,"Map With Markers"),g()(),a(47,"div",9)(48,"div",16)(49,"google-map",17),S("mapClick",function(r){return t.addMarker(r)}),G(50,le,1,2,"map-marker",18,B),g()()()()(),a(52,"div",1)(53,"div",2),l(54,"div",3)(55,"div",4)(56,"div",5)(57,"div",6),a(58,"div",7)(59,"div",8),_(60,"Heat Map Layer"),g()(),a(61,"div",9)(62,"div",19)(63,"google-map",12),l(64,"map-heatmap-layer",20),g()()()()(),a(65,"div",1)(66,"div",2),l(67,"div",3)(68,"div",4)(69,"div",5)(70,"div",6),a(71,"div",7)(72,"div",8),_(73,"Map Traffic Layer"),g()(),a(74,"div",9)(75,"div",21)(76,"google-map",12),l(77,"map-traffic-layer",22),g()()()()()()),e&2&&(d(11),c("center",t.center)("zoom",t.zoom),d(12),c("center",t.center)("zoom",t.zoom),d(),c("url",t.imageUrl)("bounds",t.imageBounds),d(12),c("center",t.center)("zoom",t.zoom),d(),c("url",t.kmlUrl),d(12),c("center",t.center)("zoom",t.zoom),d(),N(t.markerPositions),d(13),c("center",t.center1)("zoom",t.zoom1),d(),c("data",t.heatmapData)("options",t.heatmapOptions),d(12),c("center",t.center)("zoom",t.zoom),d(),c("autoRefresh",!1))},dependencies:[K,y,q,Y,X,te,ee]})};export{ie as GoogleMapComponent};
